name: dev-spring-springboot

on:
  push:
    branches:
      - Fix/#50
#      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    services: # 서비스할 목록들 (ex. Redis, Postgresql ...)
      mysql: # 사용할 서비스 명
        image: mysql:5.7  # 사용할 서비스의 이미지(도커 개념 기반)
        env: # 사용할 서비스의 환경설정
          MYSQL_USER: test
          MYSQL_PASSWORD: test
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: PLAM
        ports: # 열어줄 포트, 8080:3306 형태로도 가능
          - 3307
        options: >-  # 서비스에 걸어줄 옵션
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: verify MySQL connection from host
          # 아래는 실행문, cli에 입력하듯이 명령어를 작성하면 된다.
        run: |
          mysql --version
          sudo apt-get install -y mysql-client
          sudo service mysql start
          mysql -uroot -proot -e "CREATE DATABASE PLAM"
          mysql -uroot -proot -e "SHOW DATABASES"

#      - name: Set MariaDb
#        uses: getong/mariadb-action@v1.1
#        with:
#          host port: 3307
#          container port: 3307
#          character set server: 'utf8'
#          mariadb version: '10.6.10'
#          mysql database: 'cmc_database'
#          mysql user: 'root'
#          mysql password: ${{ secrets.MARIADB_PASSWORD }}
#
#      - name: Verify MariaDB connection
#        env:
#          PORT: 3307
#        run: |
#          while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
#            sleep 1
#          done

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: |
          export IAM_ACCESS_KEY="${{ secrets.IAM_ACCESS_KEY }}"
          export IAM_SECRET_KEY="${{ secrets.IAM_SECRET_KEY }}"
          export JWT_SECRET="${{ secrets.JWT_SECRET }}"
          export LOCAL_DB_PASSWORD="${{ secrets.LOCAL_DB_PASSWORD }}"
          export LOCAL_DB_USERNAME="${{ secrets.LOCAL_DB_USERNAME }}"
          export S3_BUCKET_NAME="${{ secrets.S3_BUCKET_NAME }}"
          ./gradlew clean build
        shell: bash

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Show Current Time
        run: echo "CurrentTime=$"
        shell: bash

      - name: Generate deployment package
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/application.jar
          cp Procfile deploy/Procfile
          cp -r .ebextensions deploy/.ebextensions
          cp -r .platform deploy/.platform
          cd deploy && zip -r deploy.zip .
          -i

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws_secret_key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          application_name: cmc-server
          environment_name: Cmcserver-env
          version_label: github-action-${{steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip